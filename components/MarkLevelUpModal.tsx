import React from 'react';
import { MarkLevelUpEvent, SystemAction } from '../types';

const deityColors: Record<string, { text: string; bg: string; border: string }> = {
    'Sylvian': { text: 'text-green-300', bg: 'bg-green-700/50', border: 'border-green-500' },
    'Gro-goroth': { text: 'text-red-300', bg: 'bg-red-700/50', border: 'border-red-500' },
    'Alll-mer': { text: 'text-yellow-300', bg: 'bg-yellow-700/50', border: 'border-yellow-500' },
    'Khaos, ƒê·∫•ng H·ªón Mang': { text: 'text-purple-300', bg: 'bg-purple-700/50', border: 'border-purple-500' },
    'Aethel, Ng∆∞·ªùi D·ªát H∆∞ Kh√¥ng': { text: 'text-gray-300', bg: 'bg-gray-700/50', border: 'border-gray-500' },
    'Lithos, √ù Ch√≠ C·ªßa ƒê√°': { text: 'text-orange-400', bg: 'bg-orange-700/50', border: 'border-orange-500' }
};

const PATHS = [
    { name: 'S·ª©c M·∫°nh', description: 'TƒÉng c∆∞·ªùng vƒ©nh vi·ªÖn m·ªôt ch·ªâ s·ªë c·ªët l√µi, c·ªßng c·ªë th·ªÉ ch·∫•t ho·∫∑c tinh th·∫ßn c·ªßa b·∫°n b·∫±ng quy·ªÅn nƒÉng c·ªßa th·∫ßn linh.', icon: 'üí™' },
    { name: 'Quy·ªÅn NƒÉng', description: 'H·ªçc m·ªôt k·ªπ nƒÉng m·ªõi ƒë·ªôc quy·ªÅn, m·ªôt b√≠ m·∫≠t ch·ªâ ƒë∆∞·ª£c ban cho nh·ªØng t√≠n ƒë·ªì trung th√†nh nh·∫•t.', icon: '‚ú®' },
    { name: '·∫¢nh H∆∞·ªüng', description: 'Chi√™u m·ªô m·ªôt t√≠n ƒë·ªì m·ªõi cho Th√°nh ƒê·ªãa c·ªßa b·∫°n, lan t·ªèa ·∫£nh h∆∞·ªüng c·ªßa v·ªã th·∫ßn v√† c·ªßng c·ªë l·ª±c l∆∞·ª£ng c·ªßa b·∫°n.', icon: 'üë•' }
];

interface MarkLevelUpModalProps {
    event: MarkLevelUpEvent;
    onSystemAction: (action: SystemAction) => void;
}

export const MarkLevelUpModal: React.FC<MarkLevelUpModalProps> = ({ event, onSystemAction }) => {
    const colors = deityColors[event.deity] || { text: 'text-gray-300', bg: 'bg-gray-700/50', border: 'border-gray-500' };

    const handleSelectPath = (pathName: string) => {
        onSystemAction({
            type: 'CHOOSE_LEVEL_UP_PATH',
            payload: {
                deity: event.deity,
                path: pathName
            }
        });
    };

    return (
        <div 
            className="fixed inset-0 z-50 flex items-center justify-center bg-black/80 backdrop-blur-md"
            role="dialog"
            aria-modal="true"
            aria-labelledby="mark-levelup-title"
        >
            <div className={`w-full max-w-4xl flex flex-col bg-gray-900 border-2 ${colors.border} rounded-lg shadow-2xl shadow-red-900/30`}>
                <header className={`p-6 text-center border-b-2 ${colors.border}`}>
                    <h2 id="mark-levelup-title" className={`text-4xl font-bold ${colors.text}`}>·∫§n K√Ω ThƒÉng C·∫•p!</h2>
                    <p className="text-gray-300 mt-2">L√≤ng trung th√†nh c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c ƒë·ªÅn ƒë√°p. {event.deity} ƒë√£ ban cho b·∫°n s·ª©c m·∫°nh l·ªõn h∆°n.</p>
                    <p className={`mt-1 font-bold text-xl ${colors.text}`}>·∫§n K√Ω ƒë·∫°t c·∫•p {event.newLevel}</p>
                </header>
                <main className="p-6">
                    <h3 className="text-center text-xl font-semibold text-gray-300 mb-6">H√£y ch·ªçn con ƒë∆∞·ªùng c·ªßa b·∫°n:</h3>
                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                        {PATHS.map(path => (
                            <button
                                key={path.name}
                                onClick={() => handleSelectPath(path.name)}
                                className={`flex flex-col items-center p-6 text-center border-2 ${colors.border} rounded-lg bg-black/30 hover:bg-black/60 hover:shadow-lg hover:shadow-current transition-all duration-300 transform hover:-translate-y-1`}
                            >
                                <span className="text-5xl mb-4">{path.icon}</span>
                                <h4 className={`text-2xl font-bold ${colors.text}`}>{path.name}</h4>
                                <p className="text-gray-400 text-sm mt-2">{path.description}</p>
                            </button>
                        ))}
                    </div>
                </main>
            </div>
        </div>
    );
};
